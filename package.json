{
  "devDependencies": {
    "rimraf": "~2.6.2",
    "typescript": "~3.5.1",
    "webpack": "^4.32.2",
    "webpack-cli": "^3.3.0",
    "eslint": "^5.16.0",
    "eslint-config-prettier": "^4.1.0",
    "eslint-plugin-prettier": "^3.0.1",
    "lerna": "^3.13.2",
    "prettier": "^1.18.2",
    "tslint": "^5.15.0",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.0.1",
    "tslint-react": "^4.0.0"
  },
  "private": true,
  "scripts": {
    "bootstrap": "jlpm || jlpm || jlpm && jlpm lint && jlpm bootstrap:py && jlpm bootstrap:js && jlpm bootstrap:lab",
    "bootstrap:js": "jlpm lerna bootstrap && jlpm build",
    "bootstrap:lab": "jlpm lab:link && jlpm lab:build",
    "bootstrap:py": "python -m pip install -e . --no-deps --ignore-installed",
    "build": "jlpm build:schema && lerna run prebuild && jlpm build:ts",
    "build:ts": "cd packages && cd _meta && tsc -b",
    "build:schema": "lerna run build:schema",
    "build:static": "jlpm webpack -p",
    "clean": "jlpm clean:lib && jlpm clean:test",
    "clean:lib": "lerna exec --parallel -- rimraf lib",
    "clean:test": "rimraf _testoutput",
    "lab:build": "jupyter lab build",
    "lab:link": "lerna exec --scope '@deathbeds/jupyterlab-*' -- jupyter labextension install . --no-build",
    "lint": "jlpm lint:py && jlpm lint:ts && jlpm lint:sh",
    "lint:py": "black nbjss setup.py && flake8 nbjss setup.py",
    "lint:robot": "python -m robot.tidy --inplace tests/{acceptance,resources}/*.robot && rflint --configure TooManyTestSteps:40 --configure TooFewKeywordSteps:0  tests/**/*.robot",
    "lint:sh": "beautysh -i 2 postBuild",
    "lint:ts": "jlpm lint:prettier && jlpm lint:tslint",
    "lint:prettier": "prettier --write *.json *.md *.yml && prettier --write 'packages/**/*.{ts,tsx,css,json,md}'",
    "lint:tslint": "tslint --fix -c tslint.json --project tsconfigbase.json 'packages/**/*{.ts,.tsx}'",
    "test": "jlpm test:robot",
    "test:robot": "python -m robot -d _testoutput tests/acceptance",
    "watch:schema": "jlpm lerna run watch:schema --parallel",
    "watch": "cd packages/_meta && tsc -b -w"
  },
  "workspaces": [
    "packages/*"
  ]
}
